// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/fixture/fixture.proto

package statshub_fixture

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type Team struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{1}
}

func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (m *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(m, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Fixture struct {
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to VenueId:
	//	*Fixture_VenueIdNull
	//	*Fixture_VenueIdValue
	VenueId  isFixture_VenueId `protobuf_oneof:"venue_id"`
	HomeTeam *Team             `protobuf:"bytes,4,opt,name=home_team,json=homeTeam,proto3" json:"home_team,omitempty"`
	AwayTeam *Team             `protobuf:"bytes,5,opt,name=away_team,json=awayTeam,proto3" json:"away_team,omitempty"`
	// Types that are valid to be assigned to RefereeId:
	//	*Fixture_RefereeIdNull
	//	*Fixture_RefereeIdValue
	RefereeId            isFixture_RefereeId `protobuf_oneof:"referee_id"`
	DateTime             int64               `protobuf:"varint,8,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Fixture) Reset()         { *m = Fixture{} }
func (m *Fixture) String() string { return proto.CompactTextString(m) }
func (*Fixture) ProtoMessage()    {}
func (*Fixture) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{2}
}

func (m *Fixture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fixture.Unmarshal(m, b)
}
func (m *Fixture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fixture.Marshal(b, m, deterministic)
}
func (m *Fixture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fixture.Merge(m, src)
}
func (m *Fixture) XXX_Size() int {
	return xxx_messageInfo_Fixture.Size(m)
}
func (m *Fixture) XXX_DiscardUnknown() {
	xxx_messageInfo_Fixture.DiscardUnknown(m)
}

var xxx_messageInfo_Fixture proto.InternalMessageInfo

func (m *Fixture) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type isFixture_VenueId interface {
	isFixture_VenueId()
}

type Fixture_VenueIdNull struct {
	VenueIdNull bool `protobuf:"varint,2,opt,name=venue_id_null,json=venueIdNull,proto3,oneof"`
}

type Fixture_VenueIdValue struct {
	VenueIdValue int64 `protobuf:"varint,3,opt,name=venue_id_value,json=venueIdValue,proto3,oneof"`
}

func (*Fixture_VenueIdNull) isFixture_VenueId() {}

func (*Fixture_VenueIdValue) isFixture_VenueId() {}

func (m *Fixture) GetVenueId() isFixture_VenueId {
	if m != nil {
		return m.VenueId
	}
	return nil
}

func (m *Fixture) GetVenueIdNull() bool {
	if x, ok := m.GetVenueId().(*Fixture_VenueIdNull); ok {
		return x.VenueIdNull
	}
	return false
}

func (m *Fixture) GetVenueIdValue() int64 {
	if x, ok := m.GetVenueId().(*Fixture_VenueIdValue); ok {
		return x.VenueIdValue
	}
	return 0
}

func (m *Fixture) GetHomeTeam() *Team {
	if m != nil {
		return m.HomeTeam
	}
	return nil
}

func (m *Fixture) GetAwayTeam() *Team {
	if m != nil {
		return m.AwayTeam
	}
	return nil
}

type isFixture_RefereeId interface {
	isFixture_RefereeId()
}

type Fixture_RefereeIdNull struct {
	RefereeIdNull bool `protobuf:"varint,6,opt,name=referee_id_null,json=refereeIdNull,proto3,oneof"`
}

type Fixture_RefereeIdValue struct {
	RefereeIdValue int64 `protobuf:"varint,7,opt,name=referee_id_value,json=refereeIdValue,proto3,oneof"`
}

func (*Fixture_RefereeIdNull) isFixture_RefereeId() {}

func (*Fixture_RefereeIdValue) isFixture_RefereeId() {}

func (m *Fixture) GetRefereeId() isFixture_RefereeId {
	if m != nil {
		return m.RefereeId
	}
	return nil
}

func (m *Fixture) GetRefereeIdNull() bool {
	if x, ok := m.GetRefereeId().(*Fixture_RefereeIdNull); ok {
		return x.RefereeIdNull
	}
	return false
}

func (m *Fixture) GetRefereeIdValue() int64 {
	if x, ok := m.GetRefereeId().(*Fixture_RefereeIdValue); ok {
		return x.RefereeIdValue
	}
	return 0
}

func (m *Fixture) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Fixture) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Fixture_VenueIdNull)(nil),
		(*Fixture_VenueIdValue)(nil),
		(*Fixture_RefereeIdNull)(nil),
		(*Fixture_RefereeIdValue)(nil),
	}
}

type FixtureResponse struct {
	Fixture              []*Fixture `protobuf:"bytes,1,rep,name=Fixture,proto3" json:"Fixture,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FixtureResponse) Reset()         { *m = FixtureResponse{} }
func (m *FixtureResponse) String() string { return proto.CompactTextString(m) }
func (*FixtureResponse) ProtoMessage()    {}
func (*FixtureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{3}
}

func (m *FixtureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixtureResponse.Unmarshal(m, b)
}
func (m *FixtureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixtureResponse.Marshal(b, m, deterministic)
}
func (m *FixtureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixtureResponse.Merge(m, src)
}
func (m *FixtureResponse) XXX_Size() int {
	return xxx_messageInfo_FixtureResponse.Size(m)
}
func (m *FixtureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FixtureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FixtureResponse proto.InternalMessageInfo

func (m *FixtureResponse) GetFixture() []*Fixture {
	if m != nil {
		return m.Fixture
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "statshub.fixture.Request")
	proto.RegisterType((*Team)(nil), "statshub.fixture.Team")
	proto.RegisterType((*Fixture)(nil), "statshub.fixture.Fixture")
	proto.RegisterType((*FixtureResponse)(nil), "statshub.fixture.FixtureResponse")
}

func init() { proto.RegisterFile("proto/fixture/fixture.proto", fileDescriptor_c7c35220af23820a) }

var fileDescriptor_c7c35220af23820a = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x6b, 0xea, 0x40,
	0x14, 0xc5, 0x4d, 0xf4, 0x69, 0x72, 0xd5, 0x28, 0xb3, 0x78, 0xe4, 0x3d, 0x37, 0x79, 0xe1, 0x51,
	0x82, 0x8b, 0x14, 0xf4, 0x1b, 0x48, 0x11, 0x0b, 0xa5, 0x8b, 0xa9, 0x74, 0x1b, 0xc6, 0xe6, 0x8a,
	0x03, 0xf9, 0x63, 0x33, 0x13, 0x5b, 0xbf, 0x6c, 0x3f, 0x4b, 0xc9, 0x64, 0xa2, 0xa5, 0xb6, 0x5d,
	0x65, 0x38, 0x73, 0xce, 0xcd, 0xef, 0x1e, 0x06, 0x26, 0xfb, 0x22, 0x97, 0xf9, 0xf5, 0x96, 0xbf,
	0xca, 0xb2, 0xc0, 0xe6, 0x1b, 0x2a, 0x95, 0x8c, 0x85, 0x64, 0x52, 0xec, 0xca, 0x4d, 0xa8, 0x75,
	0xdf, 0x86, 0x1e, 0xc5, 0xe7, 0x12, 0x85, 0xf4, 0xa7, 0xd0, 0x59, 0x23, 0x4b, 0x89, 0x03, 0x26,
	0x8f, 0x5d, 0xc3, 0x33, 0x82, 0x36, 0x35, 0x79, 0x4c, 0x08, 0x74, 0x32, 0x96, 0xa2, 0x6b, 0x7a,
	0x46, 0x60, 0x53, 0x75, 0xf6, 0xdf, 0x4c, 0xe8, 0x2d, 0xeb, 0x11, 0x17, 0xfe, 0xff, 0x30, 0x3c,
	0x60, 0x56, 0x62, 0xc4, 0xe3, 0x28, 0x2b, 0x93, 0x44, 0x05, 0xad, 0x55, 0x8b, 0xf6, 0x95, 0x7c,
	0x1b, 0xdf, 0x97, 0x49, 0x42, 0xae, 0xc0, 0x39, 0xb9, 0x0e, 0x2c, 0x29, 0xd1, 0x6d, 0x57, 0x13,
	0x56, 0x2d, 0x3a, 0xd0, 0xb6, 0xc7, 0x4a, 0x25, 0x73, 0xb0, 0x77, 0x79, 0x8a, 0x91, 0x44, 0x96,
	0xba, 0x1d, 0xcf, 0x08, 0xfa, 0xb3, 0xdf, 0xe1, 0xe7, 0x35, 0xc2, 0x0a, 0x9c, 0x5a, 0x95, 0x51,
	0xad, 0x30, 0x07, 0x9b, 0xbd, 0xb0, 0x63, 0x1d, 0xfa, 0xf5, 0x73, 0xa8, 0x32, 0xaa, 0x50, 0x00,
	0xa3, 0x02, 0xb7, 0x58, 0xe0, 0x99, 0xbc, 0xab, 0xc8, 0x0d, 0x3a, 0xd4, 0x17, 0x9a, 0x7d, 0x0a,
	0xe3, 0x0f, 0xce, 0x9a, 0xbe, 0xa7, 0xe8, 0x0d, 0xea, 0x9c, 0xac, 0x35, 0xff, 0x04, 0xec, 0x98,
	0x49, 0x8c, 0x24, 0x4f, 0xd1, 0xb5, 0x54, 0x49, 0x56, 0x25, 0xac, 0x79, 0x8a, 0x0b, 0x00, 0xab,
	0x29, 0x61, 0x31, 0x00, 0x38, 0x0f, 0xf5, 0x97, 0x30, 0xd2, 0xfd, 0x52, 0x14, 0xfb, 0x3c, 0x13,
	0x55, 0x13, 0x4d, 0xe5, 0xae, 0xe1, 0xb5, 0x83, 0xfe, 0xec, 0xcf, 0xe5, 0x4a, 0x4d, 0xa6, 0x71,
	0xce, 0x62, 0x70, 0xf4, 0xf1, 0x01, 0x8b, 0x03, 0x7f, 0x42, 0x42, 0x61, 0x7c, 0xc7, 0x85, 0xbc,
	0x61, 0x47, 0xa1, 0x6f, 0x04, 0xf9, 0x62, 0x92, 0x7e, 0x15, 0x7f, 0xff, 0x7d, 0xff, 0x13, 0x0d,
	0xe6, 0xb7, 0x36, 0x5d, 0xf5, 0xbc, 0xe6, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0xe3, 0x62,
	0xf5, 0x7d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FixtureServiceClient is the client API for FixtureService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FixtureServiceClient interface {
	ListDaysFixtures(ctx context.Context, in *Request, opts ...grpc.CallOption) (*FixtureResponse, error)
}

type fixtureServiceClient struct {
	cc *grpc.ClientConn
}

func NewFixtureServiceClient(cc *grpc.ClientConn) FixtureServiceClient {
	return &fixtureServiceClient{cc}
}

func (c *fixtureServiceClient) ListDaysFixtures(ctx context.Context, in *Request, opts ...grpc.CallOption) (*FixtureResponse, error) {
	out := new(FixtureResponse)
	err := c.cc.Invoke(ctx, "/statshub.fixture.FixtureService/ListDaysFixtures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FixtureServiceServer is the server API for FixtureService service.
type FixtureServiceServer interface {
	ListDaysFixtures(context.Context, *Request) (*FixtureResponse, error)
}

func RegisterFixtureServiceServer(s *grpc.Server, srv FixtureServiceServer) {
	s.RegisterService(&_FixtureService_serviceDesc, srv)
}

func _FixtureService_ListDaysFixtures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FixtureServiceServer).ListDaysFixtures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/statshub.fixture.FixtureService/ListDaysFixtures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FixtureServiceServer).ListDaysFixtures(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _FixtureService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "statshub.fixture.FixtureService",
	HandlerType: (*FixtureServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDaysFixtures",
			Handler:    _FixtureService_ListDaysFixtures_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/fixture/fixture.proto",
}
