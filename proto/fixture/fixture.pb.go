// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/fixture/fixture.proto

package statshub

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	DateFrom             string   `protobuf:"bytes,1,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo               string   `protobuf:"bytes,2,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetDateFrom() string {
	if m != nil {
		return m.DateFrom
	}
	return ""
}

func (m *Request) GetDateTo() string {
	if m != nil {
		return m.DateTo
	}
	return ""
}

type Team struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{1}
}

func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (m *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(m, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Competition struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Competition) Reset()         { *m = Competition{} }
func (m *Competition) String() string { return proto.CompactTextString(m) }
func (*Competition) ProtoMessage()    {}
func (*Competition) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{2}
}

func (m *Competition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Competition.Unmarshal(m, b)
}
func (m *Competition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Competition.Marshal(b, m, deterministic)
}
func (m *Competition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Competition.Merge(m, src)
}
func (m *Competition) XXX_Size() int {
	return xxx_messageInfo_Competition.Size(m)
}
func (m *Competition) XXX_DiscardUnknown() {
	xxx_messageInfo_Competition.DiscardUnknown(m)
}

var xxx_messageInfo_Competition proto.InternalMessageInfo

func (m *Competition) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Competition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Season struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Season) Reset()         { *m = Season{} }
func (m *Season) String() string { return proto.CompactTextString(m) }
func (*Season) ProtoMessage()    {}
func (*Season) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{3}
}

func (m *Season) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Season.Unmarshal(m, b)
}
func (m *Season) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Season.Marshal(b, m, deterministic)
}
func (m *Season) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Season.Merge(m, src)
}
func (m *Season) XXX_Size() int {
	return xxx_messageInfo_Season.Size(m)
}
func (m *Season) XXX_DiscardUnknown() {
	xxx_messageInfo_Season.DiscardUnknown(m)
}

var xxx_messageInfo_Season proto.InternalMessageInfo

func (m *Season) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Season) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Fixture struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Competition          *Competition         `protobuf:"bytes,2,opt,name=competition,proto3" json:"competition,omitempty"`
	Season               *Season              `protobuf:"bytes,3,opt,name=season,proto3" json:"season,omitempty"`
	HomeTeam             *Team                `protobuf:"bytes,4,opt,name=home_team,json=homeTeam,proto3" json:"home_team,omitempty"`
	AwayTeam             *Team                `protobuf:"bytes,5,opt,name=away_team,json=awayTeam,proto3" json:"away_team,omitempty"`
	VenueId              *wrappers.Int32Value `protobuf:"bytes,6,opt,name=venue_id,json=venueId,proto3" json:"venue_id,omitempty"`
	RefereeId            *wrappers.Int32Value `protobuf:"bytes,7,opt,name=referee_id,json=refereeId,proto3" json:"referee_id,omitempty"`
	DateTime             int64                `protobuf:"varint,8,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Fixture) Reset()         { *m = Fixture{} }
func (m *Fixture) String() string { return proto.CompactTextString(m) }
func (*Fixture) ProtoMessage()    {}
func (*Fixture) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7c35220af23820a, []int{4}
}

func (m *Fixture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fixture.Unmarshal(m, b)
}
func (m *Fixture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fixture.Marshal(b, m, deterministic)
}
func (m *Fixture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fixture.Merge(m, src)
}
func (m *Fixture) XXX_Size() int {
	return xxx_messageInfo_Fixture.Size(m)
}
func (m *Fixture) XXX_DiscardUnknown() {
	xxx_messageInfo_Fixture.DiscardUnknown(m)
}

var xxx_messageInfo_Fixture proto.InternalMessageInfo

func (m *Fixture) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Fixture) GetCompetition() *Competition {
	if m != nil {
		return m.Competition
	}
	return nil
}

func (m *Fixture) GetSeason() *Season {
	if m != nil {
		return m.Season
	}
	return nil
}

func (m *Fixture) GetHomeTeam() *Team {
	if m != nil {
		return m.HomeTeam
	}
	return nil
}

func (m *Fixture) GetAwayTeam() *Team {
	if m != nil {
		return m.AwayTeam
	}
	return nil
}

func (m *Fixture) GetVenueId() *wrappers.Int32Value {
	if m != nil {
		return m.VenueId
	}
	return nil
}

func (m *Fixture) GetRefereeId() *wrappers.Int32Value {
	if m != nil {
		return m.RefereeId
	}
	return nil
}

func (m *Fixture) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "statshub.Request")
	proto.RegisterType((*Team)(nil), "statshub.Team")
	proto.RegisterType((*Competition)(nil), "statshub.Competition")
	proto.RegisterType((*Season)(nil), "statshub.Season")
	proto.RegisterType((*Fixture)(nil), "statshub.Fixture")
}

func init() { proto.RegisterFile("proto/fixture/fixture.proto", fileDescriptor_c7c35220af23820a) }

var fileDescriptor_c7c35220af23820a = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0xab, 0xda, 0x40,
	0x14, 0xc5, 0x6b, 0xb4, 0xf9, 0x73, 0x2d, 0xd2, 0x0e, 0x94, 0x06, 0x85, 0x52, 0xb2, 0x92, 0x5a,
	0x62, 0xab, 0xd0, 0x96, 0x6e, 0xba, 0x28, 0x08, 0x96, 0xae, 0xa2, 0x74, 0x2b, 0xa3, 0xb9, 0xd1,
	0x01, 0x27, 0x93, 0xce, 0x4c, 0xb4, 0xfd, 0xc4, 0xfd, 0x1a, 0x8f, 0xdc, 0xc4, 0x17, 0xe1, 0x3d,
	0x78, 0xae, 0x92, 0x9c, 0xfb, 0x3b, 0xe4, 0xcc, 0x99, 0x0b, 0xa3, 0x42, 0x2b, 0xab, 0xa6, 0x99,
	0xf8, 0x6b, 0x4b, 0x8d, 0x97, 0x67, 0x4c, 0x2a, 0xf3, 0x8d, 0xe5, 0xd6, 0x1c, 0xca, 0xed, 0xf0,
	0xed, 0x5e, 0xa9, 0xfd, 0x11, 0xa7, 0xa4, 0x6f, 0xcb, 0x6c, 0x7a, 0xd6, 0xbc, 0x28, 0x50, 0x9b,
	0x9a, 0x8c, 0xbe, 0x83, 0x97, 0xe0, 0x9f, 0x12, 0x8d, 0x65, 0x23, 0x08, 0x52, 0x6e, 0x71, 0x93,
	0x69, 0x25, 0xc3, 0xce, 0xbb, 0xce, 0x38, 0x48, 0xfc, 0x4a, 0x58, 0x68, 0x25, 0xd9, 0x1b, 0xf0,
	0x68, 0x68, 0x55, 0xe8, 0xd0, 0xc8, 0xad, 0x3e, 0xd7, 0x2a, 0x7a, 0x0f, 0xbd, 0x35, 0x72, 0xc9,
	0x06, 0xe0, 0x88, 0x94, 0x6c, 0xdd, 0xc4, 0x11, 0x29, 0x63, 0xd0, 0xcb, 0xb9, 0xc4, 0x86, 0xa6,
	0xf7, 0xe8, 0x13, 0xf4, 0x7f, 0x28, 0x59, 0xa0, 0x15, 0x56, 0xa8, 0xfc, 0x26, 0xcb, 0x07, 0x70,
	0x57, 0xc8, 0xcd, 0x8d, 0xf4, 0x7f, 0x07, 0xbc, 0x45, 0xdd, 0xc4, 0x03, 0xfe, 0x0b, 0xf4, 0x77,
	0xed, 0xcf, 0xc9, 0xd6, 0x9f, 0xbd, 0x8e, 0x2f, 0x4d, 0xc5, 0x57, 0xc9, 0x92, 0x6b, 0x92, 0x8d,
	0xc1, 0x35, 0x14, 0x21, 0xec, 0x92, 0xe7, 0x65, 0xeb, 0xa9, 0xa3, 0x25, 0xcd, 0x9c, 0x4d, 0x20,
	0x38, 0x28, 0x89, 0x1b, 0x8b, 0x5c, 0x86, 0x3d, 0x82, 0x07, 0x2d, 0x5c, 0xd5, 0x94, 0xf8, 0x15,
	0x40, 0x85, 0x4d, 0x20, 0xe0, 0x67, 0xfe, 0xaf, 0x86, 0x9f, 0x3f, 0x0e, 0x57, 0x00, 0xc1, 0x9f,
	0xc1, 0x3f, 0x61, 0x5e, 0xe2, 0x46, 0xa4, 0xa1, 0x4b, 0xec, 0x28, 0xae, 0x6f, 0x36, 0xbe, 0xdc,
	0x6c, 0xbc, 0xcc, 0xed, 0x7c, 0xf6, 0x9b, 0x1f, 0x4b, 0x4c, 0x3c, 0x82, 0x97, 0x29, 0xfb, 0x06,
	0xa0, 0x31, 0x43, 0x8d, 0xe4, 0xf4, 0x9e, 0x76, 0x06, 0x0d, 0xbe, 0x4c, 0xef, 0xf7, 0xc1, 0x0a,
	0x89, 0xa1, 0x4f, 0x3d, 0xd2, 0x3e, 0xac, 0x85, 0xc4, 0xd9, 0x4f, 0x18, 0x34, 0x45, 0xaf, 0x50,
	0x9f, 0xc4, 0x0e, 0xd9, 0x57, 0x78, 0xf1, 0x4b, 0x18, 0xdb, 0xa8, 0x86, 0xbd, 0x6a, 0x0f, 0xd3,
	0x6c, 0xd8, 0xf0, 0x4a, 0x6a, 0xb0, 0xe8, 0xd9, 0xc7, 0xce, 0xd6, 0xa5, 0x20, 0xf3, 0xbb, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x74, 0xef, 0x0d, 0x1b, 0xd3, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FixtureServiceClient is the client API for FixtureService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FixtureServiceClient interface {
	ListFixtures(ctx context.Context, in *Request, opts ...grpc.CallOption) (FixtureService_ListFixturesClient, error)
}

type fixtureServiceClient struct {
	cc *grpc.ClientConn
}

func NewFixtureServiceClient(cc *grpc.ClientConn) FixtureServiceClient {
	return &fixtureServiceClient{cc}
}

func (c *fixtureServiceClient) ListFixtures(ctx context.Context, in *Request, opts ...grpc.CallOption) (FixtureService_ListFixturesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FixtureService_serviceDesc.Streams[0], "/statshub.FixtureService/ListFixtures", opts...)
	if err != nil {
		return nil, err
	}
	x := &fixtureServiceListFixturesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FixtureService_ListFixturesClient interface {
	Recv() (*Fixture, error)
	grpc.ClientStream
}

type fixtureServiceListFixturesClient struct {
	grpc.ClientStream
}

func (x *fixtureServiceListFixturesClient) Recv() (*Fixture, error) {
	m := new(Fixture)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FixtureServiceServer is the server API for FixtureService service.
type FixtureServiceServer interface {
	ListFixtures(*Request, FixtureService_ListFixturesServer) error
}

func RegisterFixtureServiceServer(s *grpc.Server, srv FixtureServiceServer) {
	s.RegisterService(&_FixtureService_serviceDesc, srv)
}

func _FixtureService_ListFixtures_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FixtureServiceServer).ListFixtures(m, &fixtureServiceListFixturesServer{stream})
}

type FixtureService_ListFixturesServer interface {
	Send(*Fixture) error
	grpc.ServerStream
}

type fixtureServiceListFixturesServer struct {
	grpc.ServerStream
}

func (x *fixtureServiceListFixturesServer) Send(m *Fixture) error {
	return x.ServerStream.SendMsg(m)
}

var _FixtureService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "statshub.FixtureService",
	HandlerType: (*FixtureServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListFixtures",
			Handler:       _FixtureService_ListFixtures_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/fixture/fixture.proto",
}
